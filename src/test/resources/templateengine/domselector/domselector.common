%TEMPLATE_MODE HTML5
# ------------------------------------------------------------
%INPUT
<div id="header">
  <a href="index.html" title="Thymeleaf home"><img src="images/thymeleaflogonameverysmall.png" class="logo" alt="Thymeleaf Template Engine"/></a>
</div>

<div id="breadcrumb">
   <a href="index.html">thymeleaf</a>
   ::
   <span class="current">features</span>
</div>

<h2>Core Features</h2>

<ul>
  <li><b>Java template engine for XML, XHTML and HTML5</b>. Extensible to other template formats.</li>
  <li>Works both in web and non-web (<i>offline</i>) environments. No hard dependency on the Servlet API.</li>
  <li>Based on modular <i>feature sets</i> called <b>dialects</b>.
    <ul>
      <li>Dialect features (e.g.: evaluation, iteration, etc.) are applied by linking them to template's tags and/or attributes.</li>
      <li>Two dialects available out-of-the-box: <i>Standard</i> and <i>SpringStandard</i> (for Spring MVC apps, same syntax as <i>Standard</i>).</li>
      <li>Developers can extend and create custom dialects.</li>
    </ul>
  </li>
  <li>Several <i>template modes</i> out-of-the-box (extensible):
    <ul>
      <li id="xml" class="important"><b>XML</b>: validating against a DTD or not.</li>
      <li><b>XHTML 1.0 and 1.1</b>: validating against standard DTDs or not.</li>
      <li><b>HTML5</b>: both XML-formed code and <i>legacy-based HTML5</i>. Legacy non-XML code will be automatically
          cleaned and converted to XML form.</li>
    </ul>
  </li>
  <li>Full (and extensible) <b>internationalization</b> support.</li>
  <li>Configurable, high performance <b>parsed template cache</b> that reduces input/output to the minimum.</li>
  <li>Automatic DOCTYPE translations &mdash;from template DTD to result DTD&mdash; for (optional) validation of both
      template and result code.</li>
  <li>Extremely extensible: can be used as a <i>template engine framework</i> if needed.</li>
  <li>Complete <a href="documentation.html">documentation</a> including several example applications.</li>
</ul>

<h2>Standard and SpringStandard Dialects</h2>
